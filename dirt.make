# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_x86_64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
TARGETDIR = .
TARGET = $(TARGETDIR)/dirt.exe
DEFINES +=
INCLUDES += -Iinclude -Isrc/backend/miniaudio
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lraylib -lgdi32 -luser32 -lkernel32 -lole32 -loleaut32 -limm32 -lwinmm -lComdlg32
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_x86_64)
OBJDIR = obj/debug/x86_64
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -Wno-unused-function -Wno-return-type
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++20 -Wno-unused-function -Wno-return-type
ALL_LDFLAGS += $(LDFLAGS) -Llibs -L/usr/lib64 -m64

else ifeq ($(config),debug_x64)
OBJDIR = obj/debug/x64
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -Wno-unused-function -Wno-return-type
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O0 -g -std=c++20 -Wno-unused-function -Wno-return-type
ALL_LDFLAGS += $(LDFLAGS) -Llibs -L/usr/lib64 -m64

else ifeq ($(config),release_x86_64)
OBJDIR = obj/release/x86_64
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-unused-function -Wno-return-type
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -Wno-unused-function -Wno-return-type
ALL_LDFLAGS += $(LDFLAGS) -Llibs -L/usr/lib64 -m64 -s

else ifeq ($(config),release_x64)
OBJDIR = obj/release/x64
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -Wno-unused-function -Wno-return-type
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -Wno-unused-function -Wno-return-type
ALL_LDFLAGS += $(LDFLAGS) -Llibs -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/darray.o
GENERATED += $(OBJDIR)/dr_impl.o
GENERATED += $(OBJDIR)/klatt.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/rape.o
GENERATED += $(OBJDIR)/resonator.o
GENERATED += $(OBJDIR)/soloud.o
GENERATED += $(OBJDIR)/soloud_audiosource.o
GENERATED += $(OBJDIR)/soloud_bassboostfilter.o
GENERATED += $(OBJDIR)/soloud_biquadresonantfilter.o
GENERATED += $(OBJDIR)/soloud_bus.o
GENERATED += $(OBJDIR)/soloud_core_3d.o
GENERATED += $(OBJDIR)/soloud_core_basicops.o
GENERATED += $(OBJDIR)/soloud_core_faderops.o
GENERATED += $(OBJDIR)/soloud_core_filterops.o
GENERATED += $(OBJDIR)/soloud_core_getters.o
GENERATED += $(OBJDIR)/soloud_core_setters.o
GENERATED += $(OBJDIR)/soloud_core_voicegroup.o
GENERATED += $(OBJDIR)/soloud_core_voiceops.o
GENERATED += $(OBJDIR)/soloud_dcremovalfilter.o
GENERATED += $(OBJDIR)/soloud_echofilter.o
GENERATED += $(OBJDIR)/soloud_fader.o
GENERATED += $(OBJDIR)/soloud_fft.o
GENERATED += $(OBJDIR)/soloud_fft_lut.o
GENERATED += $(OBJDIR)/soloud_fftfilter.o
GENERATED += $(OBJDIR)/soloud_file.o
GENERATED += $(OBJDIR)/soloud_filter.o
GENERATED += $(OBJDIR)/soloud_flangerfilter.o
GENERATED += $(OBJDIR)/soloud_freeverbfilter.o
GENERATED += $(OBJDIR)/soloud_lofifilter.o
GENERATED += $(OBJDIR)/soloud_miniaudio.o
GENERATED += $(OBJDIR)/soloud_misc.o
GENERATED += $(OBJDIR)/soloud_noise.o
GENERATED += $(OBJDIR)/soloud_openmpt.o
GENERATED += $(OBJDIR)/soloud_openmpt_dll.o
GENERATED += $(OBJDIR)/soloud_queue.o
GENERATED += $(OBJDIR)/soloud_robotizefilter.o
GENERATED += $(OBJDIR)/soloud_speech.o
GENERATED += $(OBJDIR)/soloud_thread.o
GENERATED += $(OBJDIR)/soloud_wav.o
GENERATED += $(OBJDIR)/soloud_waveshaperfilter.o
GENERATED += $(OBJDIR)/soloud_wavstream.o
GENERATED += $(OBJDIR)/stb_vorbis.o
GENERATED += $(OBJDIR)/tinyfiledialogs.o
GENERATED += $(OBJDIR)/tts.o
OBJECTS += $(OBJDIR)/darray.o
OBJECTS += $(OBJDIR)/dr_impl.o
OBJECTS += $(OBJDIR)/klatt.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/rape.o
OBJECTS += $(OBJDIR)/resonator.o
OBJECTS += $(OBJDIR)/soloud.o
OBJECTS += $(OBJDIR)/soloud_audiosource.o
OBJECTS += $(OBJDIR)/soloud_bassboostfilter.o
OBJECTS += $(OBJDIR)/soloud_biquadresonantfilter.o
OBJECTS += $(OBJDIR)/soloud_bus.o
OBJECTS += $(OBJDIR)/soloud_core_3d.o
OBJECTS += $(OBJDIR)/soloud_core_basicops.o
OBJECTS += $(OBJDIR)/soloud_core_faderops.o
OBJECTS += $(OBJDIR)/soloud_core_filterops.o
OBJECTS += $(OBJDIR)/soloud_core_getters.o
OBJECTS += $(OBJDIR)/soloud_core_setters.o
OBJECTS += $(OBJDIR)/soloud_core_voicegroup.o
OBJECTS += $(OBJDIR)/soloud_core_voiceops.o
OBJECTS += $(OBJDIR)/soloud_dcremovalfilter.o
OBJECTS += $(OBJDIR)/soloud_echofilter.o
OBJECTS += $(OBJDIR)/soloud_fader.o
OBJECTS += $(OBJDIR)/soloud_fft.o
OBJECTS += $(OBJDIR)/soloud_fft_lut.o
OBJECTS += $(OBJDIR)/soloud_fftfilter.o
OBJECTS += $(OBJDIR)/soloud_file.o
OBJECTS += $(OBJDIR)/soloud_filter.o
OBJECTS += $(OBJDIR)/soloud_flangerfilter.o
OBJECTS += $(OBJDIR)/soloud_freeverbfilter.o
OBJECTS += $(OBJDIR)/soloud_lofifilter.o
OBJECTS += $(OBJDIR)/soloud_miniaudio.o
OBJECTS += $(OBJDIR)/soloud_misc.o
OBJECTS += $(OBJDIR)/soloud_noise.o
OBJECTS += $(OBJDIR)/soloud_openmpt.o
OBJECTS += $(OBJDIR)/soloud_openmpt_dll.o
OBJECTS += $(OBJDIR)/soloud_queue.o
OBJECTS += $(OBJDIR)/soloud_robotizefilter.o
OBJECTS += $(OBJDIR)/soloud_speech.o
OBJECTS += $(OBJDIR)/soloud_thread.o
OBJECTS += $(OBJDIR)/soloud_wav.o
OBJECTS += $(OBJDIR)/soloud_waveshaperfilter.o
OBJECTS += $(OBJDIR)/soloud_wavstream.o
OBJECTS += $(OBJDIR)/stb_vorbis.o
OBJECTS += $(OBJDIR)/tinyfiledialogs.o
OBJECTS += $(OBJDIR)/tts.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking dirt
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning dirt
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/soloud_noise.o: src/audiosource/noise/soloud_noise.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_openmpt.o: src/audiosource/openmpt/soloud_openmpt.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_openmpt_dll.o: src/audiosource/openmpt/soloud_openmpt_dll.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/darray.o: src/audiosource/speech/darray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/klatt.o: src/audiosource/speech/klatt.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/resonator.o: src/audiosource/speech/resonator.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_speech.o: src/audiosource/speech/soloud_speech.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tts.o: src/audiosource/speech/tts.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dr_impl.o: src/audiosource/wav/dr_impl.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_wav.o: src/audiosource/wav/soloud_wav.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_wavstream.o: src/audiosource/wav/soloud_wavstream.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_vorbis.o: src/audiosource/wav/stb_vorbis.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_miniaudio.o: src/backend/miniaudio/soloud_miniaudio.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud.o: src/core/soloud.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_audiosource.o: src/core/soloud_audiosource.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_bus.o: src/core/soloud_bus.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_3d.o: src/core/soloud_core_3d.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_basicops.o: src/core/soloud_core_basicops.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_faderops.o: src/core/soloud_core_faderops.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_filterops.o: src/core/soloud_core_filterops.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_getters.o: src/core/soloud_core_getters.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_setters.o: src/core/soloud_core_setters.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_voicegroup.o: src/core/soloud_core_voicegroup.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_core_voiceops.o: src/core/soloud_core_voiceops.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_fader.o: src/core/soloud_fader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_fft.o: src/core/soloud_fft.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_fft_lut.o: src/core/soloud_fft_lut.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_file.o: src/core/soloud_file.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_filter.o: src/core/soloud_filter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_misc.o: src/core/soloud_misc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_queue.o: src/core/soloud_queue.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_thread.o: src/core/soloud_thread.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_bassboostfilter.o: src/filter/soloud_bassboostfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_biquadresonantfilter.o: src/filter/soloud_biquadresonantfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_dcremovalfilter.o: src/filter/soloud_dcremovalfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_echofilter.o: src/filter/soloud_echofilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_fftfilter.o: src/filter/soloud_fftfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_flangerfilter.o: src/filter/soloud_flangerfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_freeverbfilter.o: src/filter/soloud_freeverbfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_lofifilter.o: src/filter/soloud_lofifilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_robotizefilter.o: src/filter/soloud_robotizefilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/soloud_waveshaperfilter.o: src/filter/soloud_waveshaperfilter.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rape.o: src/rape.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/tinyfiledialogs.o: src/tinyfiledialogs.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif